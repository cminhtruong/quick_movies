apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    signingConfigs {
        config {
            keyAlias 'davidetruong'
            keyPassword 'Halong14'
            storeFile file('/Users/davidetruong/Documents/My Documents/android.jks')
            storePassword 'Halong14'
        }
    }
    compileSdkVersion 27
    defaultConfig {
        applicationId "app.cmtruong.com.quickmovies"
        minSdkVersion 23
        targetSdkVersion 27
        versionCode 1
        multiDexEnabled true
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable false
            jniDebuggable false
            signingConfig signingConfigs.config
        }
        debug {
        }
    }
    task installRelease(group: 'install', dependsOn: 'installFreeRelease') {
        println 'installRelease call forwarded to installFreeRelease'
    }
    dexOptions {
        preDexLibraries = false
        javaMaxHeapSize "2g"
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    flavorDimensions 'version'
    productFlavors {
        free {
            dimension 'version'
            applicationIdSuffix '.free'
            minSdkVersion 23
            signingConfig signingConfigs.config
        }
        paid {
            dimension 'version'
            applicationIdSuffix '.paid'
            signingConfig signingConfigs.config
        }
    }
}

androidExtensions {
    experimental = true
}

ext {
    supportLibrariesVersion = '27.1.1'
    constraintVersion = '1.1.3'
    junitVersion = '4.12'
    supportTestVersion = '1.0.2'
    espressoVersion = '3.0.2'
    firebaseCoreVersion = '16.0.1'
    firebaseStorage = '4.1.0'
    circleImageVersion = '2.2.0'
    androidAdmodVersion = '15.0.1'
    lifecycleVersion = '1.1.1'
    roomVersion = '1.1.1'
    timberVersion = '4.7.1'
    gsonVersion = '2.8.5'
    picasso = '2.71828'
    glide = '4.8.0'
    stateVersion = '1.4.1'
    retrofitVersion = '2.4.0'
    okhttpVersion = '3.11.0'
    coroutines = '1.0.1'
    retrofitCoroutineVersion = '0.9.2'
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "com.android.support:appcompat-v7:$supportLibrariesVersion"
    implementation "com.android.support.constraint:constraint-layout:$constraintVersion"
    implementation "com.android.support:recyclerview-v7:$supportLibrariesVersion"
    implementation "com.android.support:support-fragment:$supportLibrariesVersion"
    implementation "com.android.support:cardview-v7:$supportLibrariesVersion"
    implementation "com.android.support:design:$supportLibrariesVersion"
    implementation "com.android.support.constraint:constraint-layout:$constraintVersion"
    implementation "com.android.support:support-v4:$supportLibrariesVersion"
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "com.android.support.test:runner:$supportTestVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$espressoVersion"
    implementation "com.squareup.picasso:picasso:$picasso"
    implementation "com.jakewharton.timber:timber:$timberVersion"
    implementation("com.squareup.retrofit2:retrofit:$retrofitVersion") {
        exclude module: 'okhttp'
    }
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$retrofitCoroutineVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.okhttp3:okhttp:$okhttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttpVersion"
    implementation "android.arch.persistence.room:runtime:$roomVersion"
    kapt "android.arch.persistence.room:compiler:$roomVersion"
    implementation "android.arch.lifecycle:extensions:$lifecycleVersion"
    implementation "android.arch.lifecycle:viewmodel:$lifecycleVersion"
    kapt "android.arch.lifecycle:compiler:$lifecycleVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines"
}

kotlin {
    experimental {
        coroutines "enable"
    }
}
